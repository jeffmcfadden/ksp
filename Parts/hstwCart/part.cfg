name = hstwCart
module = Cart
author = tosh@bk.ru || thanks Sordid for tyre texture

mesh = cart.dae
scale = 1
texture = cart.png
specPower = 0.1
rimFalloff = 1
alphaCutoff = 0.1

node_attach =  0, 0.1, 0, 0, 1, 0
node_stack_top = 0, 0.1, 0, 0, 1, 0
node_stack_bottom = 0, -0.22, 0, 0, 1, 0

cost = 1600
category = 3
subcategory = 0
manufacturer = H&S Tinkering Workshop
title = Cart
description = A simple 4-wheel cart with motor (<I>/<K> keys), brakes and handbrake (<N>/<B>), steering (<J>/<L>), headlights (<U>) and cruise control (<O>). Recommended speed 50 m/s at Kerbin, 20 m/s at the Mun. Avoid water! WARNING: cart.dll plugin is required.
    
attachRules = 1,1,1,1,0

mass = 0.2
dragModelType = default
maximum_drag = 0.01
minimum_drag = 0.01
angularDrag = 1
crashTolerance = 1e30
breakingForce = 1e30
breakingTorque = 1e30
maxTemp = 3400

// ---------- CART PARAMETERS ---------- 

// Engine:
// FrictionTorque is limiting cart's top speed and coasting distance.
forwardTorque = 0.5
backwardTorque = 0.3
brakeTorque = 1.5
frictionTorque = 0.003

// Friction:
// See WheelFrictionCurve.stiffness. 0 -- no friction (wheels always
// slip).
forwardFriction = 1
sidewaysFriction = 1

// Steering:
// When speed is less than steerLimitSpeed then maxSteerAngle is
// used. When speed is higher then steering is reverse-proportional
// to speed (steerSpeedFalloff being the coefficient).
// SteerVisisbility is the coefficient for wheel animation.
maxSteerAngle = 15
steerLimitSpeed = 5
steerSpeedFalloff = 2
steerVisibility = 2

// Suspension:
// If "deployable" is true then wheels can be deployed/retracted with
// a "landing gear" key; "deployTime" being the process duration, in
// seconds.
wheelMass = 0.1
suspensionSpring = 3
suspensionDamper = 0.1
deployable = false
deployTime = 0.5

// Compensation:
// Forces pushing cart to the ground at the Mun (compensationLowGee)
// and when moving at high speed (compensationSpeed).
compensationLowGee = 1
compensationSpeed = 0.2 

// Lights:
// Intensity is ( 0..8 ), range in meters, angle in degrees.
lightIntensity = 0.5
headLightIntensity = 1
lightRange = 10
headLightRange = 1000
lightSpotAngle = 120
headLightSpotAngle = 70

// Light colors (Red, Green and Blue, range 0..1): 
headLightColor = 1, 1, 1
stopLightColor = 1, 0, 0
parkingLightColor = 1, 0.92, 0

// Key and axis bindings:
// A key code to which a specific action is bound (like "k" or "B" or 
// "up" or "[6]" for Numpad6). For a list of available key codes see
// http://unity3d.com/support/documentation/Manual/Input.html
keyToggleLights = u
keyBrake = n
keyHandBrake = b
// A key to deploy/retract wheels (if "deployable = true" in "Engine" section) 
// is the same as landing gear key in KSP game settings.

// Valid values: an empty string (no control), "X", "Y", "Z", "Pitch", 
// "Yaw", "Roll", "Throttle" (not recommended as the reverse gear is 
// not implemented yet), and optionally "Reversed". For example,
//    Pitch
// or
//    Z Reversed
axisMotor = Y Reversed
axisSteer = X Reversed
